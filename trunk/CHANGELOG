2005-09-16

	* Version 0.2 Alpha.
	==========================

	* Added 64 bits support under linux (gcc). To achieve this target, we have fixed some GTesselator2D
	code (in particular the Tesselate method that returns indexed tesselation, now indexes are GULong instead of GUInt32).

	* Added a new class, GAnimTRSNode2D that encapsulates an animated TRS (Translation-Rotation-Scale) transformation.
	It supports a static offset pivot (intended as a full TRS transformation), hierarchy nodes linking/unlinking.

	* Added DefaultValue() and SetDefaultValue() methods to the GProperty class. These methods permit to set a default value
	for the property, intended as the value returned when there aren't keys. So the Value() method now returns always a valid
	value.

	* Implemented correct transformations to GHermiteCurve2D/1D classes (now also tangents are properly handled).

	* Fixed several little bugs into GPath2D class.

	* Fixed a bug in B-Spline SetPoints() method that prevented to build a correct opened spline.

	* Fixed a wrong cubic Bezier flattening in some rare degenerative cases.

	* Added new methods to class GMultiCurve that make possible to extract derivatives, tangents, normals and curvatures in non-derivable
	point parameter. In this case two values will be returned (left and right one).

	* Added animations support. GAnimElement class is the base class to derive to and get animations support automatically.

	* GPath2D class has now be derived from GMultiCurve2D.

	* Added an example (called animcolor) showing Amanith animations applied to color ramps generation.


2005-08-03

	* Version 0.1 Final.
	==========================

	* Updated to zlib v1.2.3 (that resolves some security issues).

	* Updated to libpng v1.2.8 (that resolves some security issues).

	* Added Visual Studio .Net 2003 build solution (it includes kernel library and examples).

	* Added installer and binaries for Windows platform.

	* Expanded string conversion of number, vectors and quaternions. Now functions accept a standard printf-like
	formatting string (ex: "%5.2f") as parameter.

	* Fixed a bug in the kernel class, that caused some memory leaks and crashes in the automatic memory retrivial (garbage collector).

	* Added full support for paletted images, and implemented an octree color quantization.

	* Changed GMesh2D class, now it's a template.

	* More robust predicates have been introduced into tesselator (dictionary order, segments intersection, CCW smaller angle span).

	* Fixed some minor and major bugs of tesselator. In particular some right diagonal cases made region collector crash, and in some degenerative
	situations (deep otimization under gcc on Mac) an infinitive loop may be occurred.

	* Added filling rules for tesselation (ODD, EVEN, BOTH).

	* Added indexed array output in the tesselator api. So now, plain vertex and indexed output are available.

	* Added a new example, called tesselator2d; it shows the realtime capabilities of Amanith tesselator.

	* Fixed optimized cubic Bézier flattening when compiled using float real type.

	* Added official support of Qt4 for examples and tools. So now the entire framework can be compiled with it. Please look at settings.conf file.

	* Added unofficial support for MinGW compiler. It seems that MinGW has a bug that make not possible to export from dynamic libraries instantied
	template classes. So in the Amanith case, the instantied template classes GMesh2D<GFloat> and GMesh2D<GDouble> could not be seen from the
	delaunay2d example. We wish that this bug will be resolved into next MinGW version. Anyway the entire framework, examples and tools can be
	compiled except for delaunay2d example. Please look at settings.conf file.
