# here, we have to define some usefull defines, so inside C++ code we can check options with #ifdef / #ifndef constructs

contains(DEFINES, _FONTS_PLUGIN) {

    # default is internal    
    DEFINES += _FONTS_PLUGIN_INTERNAL
    DEFINES -= _FONTS_PLUGIN_EXTERNAL

    contains(FONTS_PLUGIN_OPTIONS, EXTERNAL) {
        DEFINES -= _FONTS_PLUGIN_INTERNAL
        DEFINES += _FONTS_PLUGIN_EXTERNAL
    }

    #select every used drivers
    contains(FONTS_PLUGIN_OPTIONS, TRUETYPE) {
        DEFINES += _FONTS_TRUETYPE_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, TYPE1) {
        DEFINES += _FONTS_TYPE1_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, TYPE42) {
        DEFINES += _FONTS_TYPE42_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, CFF) {
        DEFINES += _FONTS_CFF_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, PFR) {
        DEFINES += _FONTS_PFR_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, CID) {
        DEFINES += _FONTS_CID_MODULE
    }
    contains(FONTS_PLUGIN_OPTIONS, MAC) {
        DEFINES += _FONTS_MAC_MODULE
    }
}

# take into account compilation mode (debug or release)
DEFINES -= FT_DEBUG_LEVEL_ERROR FT_DEBUG_LEVEL_TRACE
contains(BUILD_MODE, debug) {
    DEFINES += FT_DEBUG_LEVEL_ERROR FT_DEBUG_LEVEL_TRACE
}

INCLUDEPATH += $$(AMANITHDIR)/3rdpart/freetype2/include

unix: LIBS += $$(AMANITHDIR)/lib/libfreetype2.a $$(AMANITHDIR)/lib/libzlib.a
win32: LIBS += $$(AMANITHDIR)/lib/libfreetype2.lib $$(AMANITHDIR)/lib/libzlib.lib
